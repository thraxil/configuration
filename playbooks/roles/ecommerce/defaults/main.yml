---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role ecommerce
#

ECOMMERCE_GIT_IDENTITY: !!null

ECOMMERCE_REPOS:
  - PROTOCOL: "{{ COMMON_GIT_PROTOCOL }}"
    DOMAIN: "{{ COMMON_GIT_MIRROR }}"
    PATH: "{{ COMMON_GIT_PATH }}"
    REPO: "ecommerce.git"
    VERSION: "{{ ECOMMERCE_VERSION }}"
    DESTINATION: "{{ ecommerce_code_dir }}"
    SSH_KEY: "{{ ECOMMERCE_GIT_IDENTITY }}"

# depends upon Newrelic being enabled via COMMON_ENABLE_NEWRELIC
# and a key being provided via NEWRELIC_LICENSE_KEY
ECOMMERCE_NEWRELIC_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ ecommerce_service_name }}"
ECOMMERCE_PIP_EXTRA_ARGS: "-i {{ COMMON_PYPI_MIRROR_URL }}"
ECOMMERCE_NGINX_PORT: 18130
ECOMMERCE_SSL_NGINX_PORT: 48130

ECOMMERCE_MEMCACHE:
  - localhost:11211

ECOMMERCE_DATABASE_NAME: ecommerce
ECOMMERCE_DATABASE_USER: ecomm001
ECOMMERCE_DATABASE_PASSWORD: password
ECOMMERCE_DATABASE_HOST: localhost

ECOMMERCE_VERSION: "master"
ECOMMERCE_DJANGO_SETTINGS_MODULE: "ecommerce.settings.production"

ECOMMERCE_SESSION_EXPIRE_AT_BROWSER_CLOSE: false
ECOMMERCE_SECRET_KEY: 'Your secret key here'
ECOMMERCE_LANGUAGE_CODE: 'en'
ECOMMERCE_ECOMMERCE_URL_ROOT: 'http://localhost:8002'
ECOMMERCE_LOGOUT_URL: '{{ ECOMMERCE_ECOMMERCE_URL_ROOT }}/logout/'
ECOMMERCE_LMS_URL_ROOT: 'http://127.0.0.1:8000'

# Used to automatically configure OAuth2 Client
ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_KEY: 'ecommerce-sso-key'
ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_SECRET: 'ecommerce-sso-secret'
ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_KEY: 'ecommerce-backend-service-key'
ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_SECRET: 'ecommerce-backend-service-secret'
ECOMMERCE_SOCIAL_AUTH_REDIRECT_IS_HTTPS: false
# NOTE: Deprecate these OIDC settings post-DOP-removal for ecommerce.
ECOMMERCE_SOCIAL_AUTH_EDX_OIDC_KEY: 'ecommerce-key'
ECOMMERCE_SOCIAL_AUTH_EDX_OIDC_SECRET: 'ecommerce-secret'

# NOTE: The contents of the certificates should be set in private configuration
ecommerce_apple_pay_merchant_certificate_directory: '/edx/etc/ssl'
ecommerce_apple_pay_merchant_certificate_filename: 'apple_pay_merchant.pem'
ecommerce_apple_pay_merchant_certificate_path: '{{ ecommerce_apple_pay_merchant_certificate_directory }}/{{ ecommerce_apple_pay_merchant_certificate_filename }}'
ECOMMERCE_APPLE_PAY_MERCHANT_CERTIFICATE: |
  Your PEM file, containing a public and private key,
  should be set in private configuration. This is how you
  implement a multi-line string in YAML.

# JWT payload user attribute mapping
ECOMMERCE_EDX_DRF_EXTENSIONS:
  JWT_PAYLOAD_USER_ATTRIBUTE_MAPPING:
    administrator: 'is_staff'
    email: 'email'
    full_name: 'full_name'
    tracking_context: 'tracking_context'
    user_id: 'lms_user_id'
  JWT_PAYLOAD_MERGEABLE_USER_ATTRIBUTES:
    - 'tracking_context'
  OAUTH2_USER_INFO_URL: '{{ edx_django_service_oidc_url_root }}/user_info'


ECOMMERCE_ENABLE_COMPREHENSIVE_THEMING: false
ECOMMERCE_STATICFILES_STORAGE: 'ecommerce.theming.storage.ThemeStorage'

ECOMMERCE_DISCOVERY_SERVICE_URL: 'http://localhost:8008'

ECOMMERCE_GUNICORN_WORKER_CLASS: "gevent"
ECOMMERCE_GUNICORN_MAX_REQUESTS: 3000
ECOMMERCE_GUNICORN_EXTRA: ""
ECOMMERCE_GUNICORN_WORKERS: 2

# See edx_django_service_automated_users for an example of what this should be
ECOMMERCE_AUTOMATED_USERS: {}

# Remote config
ECOMMERCE_HERMES_ENABLED: "{{ COMMON_HERMES_ENABLED }}"

#
# vars are namespace with the module name.
#
ecommerce_service_name: "ecommerce"
ecommerce_user: "{{ ecommerce_service_name }}"
ecommerce_home: "{{ COMMON_APP_DIR }}/{{ ecommerce_service_name }}"
ecommerce_code_dir: "{{ ecommerce_home }}/{{ ecommerce_service_name }}"
ecommerce_venv_dir: "{{ ecommerce_home }}/venvs/{{ ecommerce_service_name }}"

ecommerce_gunicorn_port: "8130"

ecommerce_environment:
  ECOMMERCE_CFG: "{{ COMMON_CFG_DIR }}/{{ ecommerce_service_name }}.yml"

ecommerce_create_demo_data: false

# Antivirus
ECOMMERCE_ENABLE_ANTIVIRUS: false
ECOMMERCE_ANTIVIRUS_SCAN_DIRECTORY: "{{ ecommerce_code_dir }}"

ECOMMERCE_ENABLE_ADMIN_URLS_RESTRICTION: false

ECOMMERCE_ADMIN_URLS:
  - admin

ECOMMERCE_ENABLE_NEWRELIC_DISTRIBUTED_TRACING: false

#
# OS packages
#

ecommerce_debian_pkgs:
  - libmysqlclient-dev
  - libjpeg-dev
  - libssl-dev
  - libffi-dev
  - libsqlite3-dev

ecommerce_redhat_pkgs: []

ecommerce_post_migrate_commands:
  - command: './manage.py oscar_populate_countries --initial-only'
    when: true
  - command: './manage.py create_or_update_site --site-id=1 --site-domain={{ ECOMMERCE_ECOMMERCE_URL_ROOT.split("://")[1] }} --partner-code=edX --partner-name="Open edX" --lms-url-root={{ ECOMMERCE_LMS_URL_ROOT }} --client-side-payment-processor=cybersource --payment-processors=cybersource,paypal --client-id={{ ECOMMERCE_SOCIAL_AUTH_EDX_OIDC_KEY }} --client-secret={{ ECOMMERCE_SOCIAL_AUTH_EDX_OIDC_SECRET }} --sso-client-id={{ ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_KEY }} --sso-client-secret={{ ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_SECRET }} --backend-service-client-id={{ ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_KEY }} --backend-service-client-secret={{ ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_SECRET }} --from-email staff@example.com --discovery_api_url={{ ECOMMERCE_DISCOVERY_SERVICE_URL }}/api/v1/ --journals_api_url={{ JOURNALS_API_URL|default("") }}'
    when: '{{ ecommerce_create_demo_data }}'
  - command: './manage.py create_demo_data --partner=edX'
    when: '{{ ecommerce_create_demo_data }}'
