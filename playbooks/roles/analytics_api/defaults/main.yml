---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role analytics_api
#

ANALYTICS_API_GIT_IDENTITY: !!null

#
# vars are namespace with the module name
#

analytics_api_service_name: "analytics_api"
analytics_api_gunicorn_port: "8100"

ANALYTICS_API_DJANGO_SETTINGS_MODULE: "analyticsdataserver.settings.production"

analytics_api_environment:
  ANALYTICS_API_CFG: "{{ COMMON_CFG_DIR }}/{{ analytics_api_service_name }}.yml"
  DJANGO_SETTINGS_MODULE: "{{ ANALYTICS_API_DJANGO_SETTINGS_MODULE }}"

analytics_api_home: "{{ COMMON_APP_DIR }}/{{ analytics_api_service_name }}"
analytics_api_user: "{{ analytics_api_service_name }}"
analytics_api_code_dir: "{{ analytics_api_home }}/{{ analytics_api_service_name }}"

analytics_api_wsgi_name: "analyticsdataserver"
analytics_api_hostname: "analytics-api"

analytics_api_newrelic_appname: 'analytics-api'

#
# OS packages
#
analytics_api_debian_pkgs:
  - 'libmysqlclient-dev'

ANALYTICS_API_VERSION: "master"
ANALYTICS_API_NGINX_PORT: '1{{ analytics_api_gunicorn_port }}'
ANALYTICS_API_SSL_NGINX_PORT: '4{{ analytics_api_gunicorn_port }}'

ANALYTICS_API_REPOS:
  - PROTOCOL: "{{ COMMON_GIT_PROTOCOL }}"
    DOMAIN: "{{ COMMON_GIT_MIRROR }}"
    PATH: "{{ COMMON_GIT_PATH }}"
    REPO: edx-analytics-data-api.git
    VERSION: "{{ ANALYTICS_API_VERSION }}"
    DESTINATION: "{{ analytics_api_code_dir }}"
    SSH_KEY: "{{ ANALYTICS_API_GIT_IDENTITY }}"


ANALYTICS_API_SECRET_KEY: 'Your secret key here'

ANALYTICS_API_DEFAULT_DB_NAME: 'analytics-api'
ANALYTICS_API_DEFAULT_USER: 'api001'
ANALYTICS_API_DEFAULT_PASSWORD: 'password'
ANALYTICS_API_DEFAULT_HOST: 'localhost'
ANALYTICS_API_DEFAULT_PORT: '3306'
ANALYTICS_API_DEFAULT_MYSQL_OPTIONS:
  connect_timeout: 10
  init_command: "SET sql_mode='STRICT_TRANS_TABLES'"

ANALYTICS_API_REPORTS_DB_NAME: 'reports'
ANALYTICS_API_REPORTS_USER: 'reports001'
ANALYTICS_API_REPORTS_PASSWORD: 'password'
ANALYTICS_API_REPORTS_HOST: 'localhost'
ANALYTICS_API_REPORTS_PORT: '3306'
ANALYTICS_API_REPORTS_MYSQL_OPTIONS:
  connect_timeout: 10
  init_command: "SET sql_mode='STRICT_TRANS_TABLES'"

# Example settings to use Amazon S3 as a storage backend for course reports.
#
# This storage mechanism also provides support for pre-authenticated URLs with an expiry time,
# allowing temporary report downloads from secured S3 file locations.
#
# ANALYTICS_API_REPORT_DOWNLOAD_BACKEND:
#   DEFAULT_FILE_STORAGE: 'storages.backends.s3boto.S3BotoStorage'
#   AWS_ACCESS_KEY_ID: 'put-your-access-key-id-here'
#   AWS_SECRET_ACCESS_KEY: 'put-your-secret-access-key-here'
#   AWS_STORAGE_BUCKET_NAME: 'report-download-bucket'
#   COURSE_REPORT_FILE_LOCATION_TEMPLATE: '/{course_id}_{report_name}.csv'
#   COURSE_REPORT_DOWNLOAD_EXPIRY_TIME: 120
#
# By default, instead we use the local filesystem.
#
# Other storage providers can be used, as long as they provide the .url() method.

ANALYTICS_API_ALLOW_CORS_HEADERS: true
ANALYTICS_API_ALLOW_CORS_CREDENTIALS: true
ANALYTICS_API_CORS_ORIGIN_WHITELIST: []
ANALYTICS_API_BASIC_AUTH_EXEMPTED_PATHS:
  - 'enterprise'

# Default dummy user, override this!!
ANALYTICS_API_USERS:
  "dummy-api-user": "changeme"

ANALYTICS_API_ENABLE_NEWRELIC_DISTRIBUTED_TRACING: false

# Remote config
ANALYTICS_API_HERMES_ENABLED: "{{ COMMON_HERMES_ENABLED }}"
