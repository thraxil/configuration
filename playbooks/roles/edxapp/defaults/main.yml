# variables common to the edxapp role, automatically loaded
# when the role is included
---

# These are variables that default to a localhost
# setup and are meant to be overwritten for
# different environments.
#
# Variables in all caps are environment specific
# Lowercase variables are internal to the role
#
# Defaults specified here should not contain
# any secrets or host identifying information.
#

EDXAPP_LMS_BASE: "{{ EDXAPP_LMS_SITE_NAME }}:{{ EDXAPP_LMS_NGINX_PORT }}"
EDXAPP_CMS_BASE: "{{ EDXAPP_CMS_SITE_NAME }}:{{ EDXAPP_CMS_NGINX_PORT }}"

EDXAPP_LMS_GUNICORN_EXTRA: ""
EDXAPP_LMS_GUNICORN_EXTRA_CONF: ""
EDXAPP_LMS_GUNICORN_TIMEOUT: 300

EDXAPP_CMS_GUNICORN_EXTRA: ""
EDXAPP_CMS_GUNICORN_EXTRA_CONF: ""
EDXAPP_CMS_GUNICORN_TIMEOUT: 300

# Set this to the maximum number
# of requests for gunicorn for the lms and cms
# gunicorn --max-requests <num>
EDXAPP_LMS_MAX_REQ: !!null
EDXAPP_CMS_MAX_REQ: !!null

# Comma-separated list of hosts/ips
EDXAPP_MONGO_HOSTS: 'localhost'
EDXAPP_MONGO_PASSWORD: 'password'
EDXAPP_MONGO_PORT: 27017
EDXAPP_MONGO_USER: 'edxapp'
EDXAPP_MONGO_DB_NAME: 'edxapp'
EDXAPP_MONGO_USE_SSL: False
EDXAPP_MONGO_REPLICA_SET: ''

EDXAPP_MYSQL_DB_NAME: 'edxapp'
EDXAPP_MYSQL_USER: 'edxapp001'
EDXAPP_MYSQL_USER_ADMIN: 'root'
EDXAPP_MYSQL_PASSWORD: 'password'
EDXAPP_MYSQL_PASSWORD_READ_ONLY: 'password'
EDXAPP_MYSQL_PASSWORD_ADMIN: 'password'
EDXAPP_MYSQL_OPTIONS: {}
EDXAPP_MYSQL_ATOMIC_REQUESTS: True
EDXAPP_MYSQL_REPLICA_DB_NAME: "{{ EDXAPP_MYSQL_DB_NAME }}"
EDXAPP_MYSQL_REPLICA_USER: "{{ EDXAPP_MYSQL_USER }}"
EDXAPP_MYSQL_REPLICA_PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD }}"
EDXAPP_MYSQL_REPLICA_HOST: "{{ EDXAPP_MYSQL_HOST }}"
EDXAPP_MYSQL_REPLICA_PORT: "{{ EDXAPP_MYSQL_PORT }}"
EDXAPP_MYSQL_REPLICA_OPTIONS: "{{ EDXAPP_MYSQL_OPTIONS }}"
EDXAPP_MYSQL_CSMH_DB_NAME: "edxapp_csmh"
EDXAPP_MYSQL_CSMH_USER: "{{ EDXAPP_MYSQL_USER }}"
EDXAPP_MYSQL_CSMH_PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD }}"
EDXAPP_MYSQL_CSMH_HOST: "{{ EDXAPP_MYSQL_HOST }}"
EDXAPP_MYSQL_CSMH_PORT: "{{ EDXAPP_MYSQL_PORT }}"
EDXAPP_MYSQL_CSMH_OPTIONS: "{{ EDXAPP_MYSQL_OPTIONS }}"

# This is Django's default https://docs.djangoproject.com/en/1.8/ref/settings/#conn-max-age
EDXAPP_MYSQL_CONN_MAX_AGE: 0

EDXAPP_MYSQL_HOST: 'localhost'
EDXAPP_MYSQL_PORT: '3306'

EDXAPP_SEARCH_HOST: 'localhost'
EDXAPP_SEARCH_PORT: 9200
EDXAPP_SEARCH_USE_SSL: false

# list of dictionaries of the format
# { 'host': 'hostname', 'port': 'portnumber', 'otherconfigsuchas use_ssl': 'True' }
# http://elasticsearch-py.readthedocs.org/en/master/api.html#elasticsearch
EDXAPP_ELASTIC_SEARCH_CONFIG:
  - host: "{{ EDXAPP_SEARCH_HOST }}"
    port: "{{ EDXAPP_SEARCH_PORT }}"
    use_ssl: "{{ EDXAPP_SEARCH_USE_SSL }}"

EDXAPP_SETTINGS: '{{ COMMON_EDXAPP_SETTINGS }}'

EDXAPP_LMS_ENV: 'lms.envs.{{ EDXAPP_SETTINGS }}'
EDXAPP_CMS_ENV: 'cms.envs.{{ EDXAPP_SETTINGS }}'


EDXAPP_CAS_ATTRIBUTE_PACKAGE: ""

# Settings for affiliate cookie tracking
EDXAPP_AFFILIATE_COOKIE_NAME: 'dev_affiliate_id'

EDXAPP_GIT_REPO_DIR: '/edx/var/edxapp/course_repos'

# This needs to be set to localhost
# if xqueue is run on the same server
# as the lms (it's sent in the request)
EDXAPP_SITE_NAME: 'localhost'
EDXAPP_LMS_SITE_NAME: "{{ EDXAPP_SITE_NAME }}"
EDXAPP_MEDIA_URL:  "/media"

EDXAPP_LMS_NGINX_PORT: 18000
EDXAPP_LMS_SSL_NGINX_PORT: 48000

EDXAPP_CMS_NGINX_PORT: 18010
EDXAPP_CMS_SSL_NGINX_PORT: 48010

# NGINX Rate limiting related vars
EDXAPP_ENABLE_RATE_LIMITING: false
EDXAPP_COURSES_REQUEST_RATE: '5r/s'
EDXAPP_COURSES_REQUEST_BURST_RATE: 10
EDXAPP_COURSES_USER_AGENT_BURST_RATE: 5
EDXAPP_RATE_LIMITED_USER_AGENTS: []

# Consumed in the edxapp.yml playbook
# to pass to nginx as nginx_skip_enable_sites
EDXAPP_NGINX_SKIP_ENABLE_SITES: False

# If the LMS and Studio run on the same machine / nginx, it makes sense to have
# a default (usually the LMS).  If you run on separate machines, you'll want to mark
# them both as defaults.
EDXAPP_NGINX_DEFAULT_SITES:
  - 'lms'

EDXAPP_LANG: 'en_US.UTF-8'

EDXAPP_TECH_SUPPORT_EMAIL: 'technical@example.com'
EDXAPP_DEFAULT_FROM_EMAIL: 'registration@example.com'
EDXAPP_LMS_ROOT_URL: "{{ EDXAPP_LMS_BASE_SCHEME | default('https') }}://{{ EDXAPP_LMS_BASE }}"

EDXAPP_ENV_EXTRA: {}
EDXAPP_AUTH_EXTRA: {}
EDXAPP_LMS_ENV_EXTRA: "{{ EDXAPP_ENV_EXTRA }}"
EDXAPP_CMS_ENV_EXTRA: "{{ EDXAPP_ENV_EXTRA }}"
EDXAPP_LMS_AUTH_EXTRA: "{{ EDXAPP_AUTH_EXTRA }}"
EDXAPP_CMS_AUTH_EXTRA: "{{ EDXAPP_AUTH_EXTRA }}"

# These set the url for static files
# Override this var to use a CDN
# Example: http://xxxxx.cloudfront.net/static/

# Configure paver tasks in edx-platform to skip Python/Ruby/Node installation
EDXAPP_NO_PREREQ_INSTALL: 1

# whether to setup the python codejail or not
EDXAPP_PYTHON_SANDBOX: true
# this next setting, if true, turns on actual sandbox enforcement.  If not true,
# it puts the sandbox in 'complain' mode, for reporting but not enforcement
EDXAPP_SANDBOX_ENFORCE: true

# Vars that are used when the automated role is "mixed-in" via the deploying play
# This data structure specifies all the users with access to run command remotely
# over SSH and the fully qualified command that they can run via sudo to the
# application user

EDXAPP_AUTOMATED_USERS:
  automated_user:
    sudo_commands:
      - command: "{{ edxapp_venv_bin }}/python {{ edxapp_code_dir }}/manage.py lms showmigrations --settings={{ edxapp_settings }}"
        sudo_user: "edxapp"
    authorized_keys:
      - "SSH authorized key"

EDXAPP_USE_GIT_IDENTITY: false
# Paste the contents of the git identity
# into this var
EDXAPP_GIT_IDENTITY: !!null

EDXAPP_UPDATE_STATIC_FILES_KEY: false
# Set this to true if you want to install the private pip
# requirements in the edx-platform repo.
# This will use EDXAPP_GIT_IDENTITY, EDXAPP_USE_GIT_IDENTITY
# must be set to true if EDXAPP_INSTALL_PRIVATE_REQUIREMENTS is
# set to true

EDXAPP_INSTALL_PRIVATE_REQUIREMENTS: false

# List of additional python packages that should be installed into the
# edxapp virtual environment.
# `name` (required), `version` (optional), and `extra_args` (optional)
# are supported and correspond to the options of ansible's pip module.
# Example:
# EDXAPP_EXTRA_REQUIREMENTS:
#   - name: mypackage
#     version: 1.0.1
#   - name: git+https://git.myproject.org/MyProject#egg=MyProject
EDXAPP_EXTRA_REQUIREMENTS: []

# List of private requirements that should be installed into the
# edxapp virtual environment.
# `name` (required), 'extra_args' (optional)
# Example:
# EDXAPP_PRIVATE_REQUIREMENTS:
#   - name: git+https://git.myproject.org/MyProject#egg=MyProject
EDXAPP_PRIVATE_REQUIREMENTS:
    # For Harvard courses:
    - name: xblock-problem-builder==3.1.3
    # Oppia XBlock
    - name: git+https://github.com/oppia/xblock.git@9f6b95b7eb7dbabb96b77198a3202604f96adf65#egg=oppia-xblock
      extra_args: -e
    # This repository contains schoolyourself-xblock, which is used in
    # edX's "AlgebraX" and "GeometryX" courses.
    - name: git+https://github.com/schoolyourself/schoolyourself-xblock.git@5e4d37716e3e72640e832e961f7cc0d38d4ec47b#egg=schoolyourself-xblock
      extra_args: -e
    # Prototype XBlocks from edX learning sciences limited roll-outs and user testing.
    # Concept XBlock, in particular, is nowhere near finished and an early prototype.
    # Profile XBlock is there so we can play with XBlock arguments in the platform, but isn't ready for use outside of
    # edX.
    - name: git+https://github.com/edx/ConceptXBlock.git@2376fde9ebdd83684b78dde77ef96361c3bd1aa0#egg=concept-xblock
      extra_args: -e
    - name: git+https://github.com/edx/AudioXBlock.git@1fbf19cc21613aead62799469e1593adb037fdd9#egg=audio-xblock
      extra_args: -e
    - name: git+https://github.com/edx/AnimationXBlock.git@d2b551bb8f49a138088e10298576102164145b87#egg=animation-xblock
      extra_args: -e
    # Peer instruction XBlock
    - name: ubcpi-xblock==0.6.5
    # Vector Drawing and ActiveTable XBlocks (Davidson)
    - name: git+https://github.com/open-craft/xblock-vectordraw.git@c57df9d98119fd2ca4cb31b9d16c27333cdc65ca#egg=xblock-vectordraw==0.2.1
      extra_args: -e
    - name: git+https://github.com/open-craft/xblock-activetable.git@e933d41bb86a8d50fb878787ca680165a092a6d5#egg=xblock-activetable
      extra_args: -e

# Whether to run reindex_course on deploy
EDXAPP_REINDEX_ALL_COURSES: false

# XML Course related flags
EDXAPP_XML_FROM_GIT: false
EDXAPP_XML_S3_BUCKET: !!null
EDXAPP_XML_S3_KEY: !!null

EDXAPP_NEWRELIC_LMS_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-edxapp-lms"
EDXAPP_NEWRELIC_CMS_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-edxapp-cms"
EDXAPP_NEWRELIC_WORKERS_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-edxapp-workers"
EDXAPP_LMS_ENABLE_NEWRELIC_DISTRIBUTED_TRACING: false
EDXAPP_CMS_ENABLE_NEWRELIC_DISTRIBUTED_TRACING: false
EDXAPP_WORKERS_ENABLE_NEWRELIC_DISTRIBUTED_TRACING: false

# Set the number of workers explicitly for lms and cms
# Should be set to
# EDXAPP_WORKERS:
#   lms: <num workers>
#   cms: <num workers>
EDXAPP_WORKERS: !!null

EDXAPP_CELERY_WORKERS:
  - queue: default
    service_variant: cms
    concurrency: 1
    monitor: True
  - queue: high
    service_variant: cms
    concurrency: 1
    monitor: True
  - queue: default
    service_variant: lms
    concurrency: 1
    monitor: True
  - queue: high
    service_variant: lms
    concurrency: 1
    monitor: True
  - queue: high_mem
    service_variant: lms
    concurrency: 1
    monitor: False
    max_tasks_per_child: 1

# Unused directory for edxapp application yaml configuration files
EDXAPP_CFG_DIR: "{{ COMMON_CFG_DIR }}/edxapp"

#To use AWS S3 as your backend, you need different kwargs:
# EDXAPP_PROFILE_IMAGE_BACKEND_CONFIG:
#   class: storages.backends.s3boto.S3BotoStorage
#   options:
#     location: /path/to/images
#     bucket: mybucket
#     custom_domain: mybucket.s3.amazonaws.com
#     access_key: XXXAWS_ACCESS_KEYXXX
#     secret_key: XXXAWS_SECRETY_KEYXXX
#     headers:
#       Cache-Control: max-age-{{ EDXAPP_PROFILE_IMAGE_MAX_AGE }}
#NB: access_key and secret_key are unneccessary if you use IAM roles
#NB2: custom_domain is REQUIRED. Otherwise, boto will generate a
# temporary URL whenever asked for the URL of a specific file.

EDXAPP_PROFILE_IMAGE_MAX_AGE: 31536000

# Comprehensive Theming
# Deprecated, maintained for backward compatibility
EDXAPP_COMPREHENSIVE_THEME_DIR: ""

# list of paths to the comprehensive theme directories
EDXAPP_COMPREHENSIVE_THEME_DIRS:
  - "{{ EDXAPP_COMPREHENSIVE_THEME_DIR }}"

# Name of the default site theme
EDXAPP_DEFAULT_SITE_THEME: ""
EDXAPP_ENABLE_COMPREHENSIVE_THEMING: false

# Git repo for the comprehensive theme (if using a comprehensive theme
# other than the ones bundled with edx/platform)
EDXAPP_COMPREHENSIVE_THEME_SOURCE_REPO: ""
# Git branch, tag, or revision to check out from
# EDXAPP_COMPREHENSIVE_THEME_SOURCE_REPO
EDXAPP_COMPREHENSIVE_THEME_VERSION: ""

# Optionally add a cron job to run the "clearsessions" management command to delete expired sessions
# Hours and minutes follow cron syntax.
# E.g. "15,19" hours and "0" minutes will run it at 15:00 and 19:00.
#      "*" hours and "5" minutes  will run it every hour at past 5 minutes.
EDXAPP_CLEARSESSIONS_CRON_ENABLED: false
EDXAPP_CLEARSESSIONS_CRON_HOURS: "14"
EDXAPP_CLEARSESSIONS_CRON_MINUTES: "0"

# Add additional cron jobs from the given list.
# See ansible docs for valid options for these items:
#  https://docs.ansible.com/ansible/latest/modules/cron_module.html
EDXAPP_ADDITIONAL_CRON_JOBS: []

# Configuration needed for LMS to communicate with the Journals service
JOURNALS_SERVICE_USER_EMAIL: "journals_worker@example.com"
JOURNALS_SERVICE_USER_NAME: "journals_worker"

# Configuration needed for LMS to communicate with the Discovery service
DISCOVERY_SERVICE_USER_EMAIL: "discovery_worker@example.com"
DISCOVERY_SERVICE_USER_NAME: "discovery_worker"

# Configuration needed for LMS to communicate with the Ecommerce service
ECOMMERCE_SERVICE_USER_EMAIL: "ecommerce_worker@example.com"
ECOMMERCE_SERVICE_USER_NAME: "ecommerce_worker"

# Configuration needed for LMS to communicate with the Credentials service
CREDENTIALS_SERVICE_USER_EMAIL: "credentials_worker@example.com"
CREDENTIALS_SERVICE_USER_NAME: "credentials_worker"

# Configuration needed for LMS to communicate with the Insights service
INSIGHTS_SERVICE_USER_EMAIL: "insights_worker@example.com"
INSIGHTS_SERVICE_USER_NAME: "insights_worker"

# Configuration needed for LMS to communicate with the Credentials service
REGISTRAR_SERVICE_USER_EMAIL: "registrar_worker@example.com"
REGISTRAR_SERVICE_USER_NAME: "registrar_worker"

# Configuration needed for LMS to communicate with the Designer service
DESIGNER_SERVICE_USER_EMAIL: "designer_worker@example.com"
DESIGNER_SERVICE_USER_NAME: "designer_worker"

EDXAPP_ENTERPRISE_SERVICE_WORKER_EMAIL: "enterprise_worker@example.com"
EDXAPP_ENTERPRISE_SERVICE_WORKER_USERNAME: "enterprise_worker"

EDXAPP_VEDA_SERVICE_CLIENT_NAME: "veda"
EDXAPP_VEDA_SERVICE_API_URL: "{{ EDXAPP_LMS_BASE_SCHEME | default('https') }}://veda-{{ EDXAPP_LMS_BASE }}/api/"
EDXAPP_VEDA_SERVICE_USER_EMAIL: "veda_service_user@example.com"
EDXAPP_VEDA_SERVICE_USER_NAME: "veda_service_user"

# Scorm Xblock configurations
EDXAPP_SCORM_PKG_STORAGE_DIR: !!null
EDXAPP_SCORM_PLAYER_LOCAL_STORAGE_ROOT: !!null

# Remote config
EDXAPP_HERMES_ENABLED: "{{ COMMON_HERMES_ENABLED }}"

#-------- Everything below this line is internal to the role ------------

#Use YAML references (& and *) and hash merge <<: to factor out shared settings
#see http://atechie.net/2009/07/merging-hashes-in-yaml-conf-files/

edxapp_data_dir: "{{ COMMON_DATA_DIR }}/edxapp"
edxapp_app_dir: "{{ COMMON_APP_DIR }}/edxapp"
edxapp_log_dir: "{{ COMMON_LOG_DIR }}/edx"
edxapp_venvs_dir: "{{ edxapp_app_dir }}/venvs"
edxapp_venv_dir: "{{ edxapp_venvs_dir }}/edxapp"
edxapp_venv_bin: "{{ edxapp_venv_dir }}/bin"
edxapp_nodeenv_dir: "{{ edxapp_app_dir }}/nodeenvs/edxapp"
edxapp_nodeenv_bin: "{{ edxapp_nodeenv_dir }}/bin"
edxapp_settings: '{{ EDXAPP_SETTINGS }}'
edxapp_node_version: "{{ common_node_version }}"
# This is where node installs modules, not node itself
edxapp_node_bin: "{{ edxapp_code_dir }}/node_modules/.bin"
edxapp_user: edxapp
edxapp_user_createhome: 'no'
edxapp_user_shell: '/bin/false'
edxapp_deploy_path: "{{ edxapp_venv_bin }}:{{ edxapp_code_dir }}/bin:{{ edxapp_node_bin }}:{{ edxapp_nodeenv_bin }}:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
edxapp_staticfile_dir: "{{ edxapp_data_dir }}/staticfiles"
edxapp_media_dir: "{{ edxapp_data_dir }}/media"
edxapp_course_static_dir: "{{ edxapp_data_dir }}/course_static"
edxapp_course_data_dir: "{{ edxapp_data_dir }}/data"
edxapp_upload_dir: "{{ edxapp_data_dir }}/uploads"
edxapp_theme_dir: "{{ edxapp_data_dir }}/themes"
edxapp_git_identity: "{{ edxapp_app_dir }}/edxapp-git-identity"
edxapp_git_ssh: "/tmp/edxapp_git_ssh.sh"
edxapp_studio_cfg: "{{ COMMON_CFG_DIR }}/studio.yml"
edxapp_lms_cfg: "{{ COMMON_CFG_DIR }}/lms.yml"

edxapp_devstack_logs:
  - "{{ supervisor_log_dir }}/cms-stdout.log"
  - "{{ supervisor_log_dir }}/cms-stderr.log"
  - "{{ supervisor_log_dir }}/lms-stdout.log"
  - "{{ supervisor_log_dir }}/lms-stderr.log"

# Only install packages which are appropriate for this environment
edxapp_npm_production: "yes"

edxapp_workers: "{{ EDXAPP_CELERY_WORKERS }}"
EDXAPP_WORKER_DEFAULT_STOPWAITSECS: 432000

# setup for python codejail
edxapp_sandbox_venv_dir:  '{{ edxapp_venvs_dir }}/edxapp-sandbox'
edxapp_sandbox_user: 'sandbox'  # I think something about the codejail requires hardcoding this to sandbox:sandbox

# apparmor command
edxapp_aa_command: "{% if EDXAPP_SANDBOX_ENFORCE %}aa-enforce{% else %}aa-complain{% endif %}"

# TODO: old style variable syntax is necessary
# for lists and dictionaries
edxapp_helper_scripts:
    - edxapp-migrate
    - edxapp-runserver
    - edxapp-shell

edxapp_environment_default:
  LANG: "{{ EDXAPP_LANG }}"
  NO_PREREQ_INSTALL: "{{ EDXAPP_NO_PREREQ_INSTALL }}"
  SKIP_WS_MIGRATIONS: 1
  PATH: "{{ edxapp_deploy_path }}"
  # the settings module for edxapp, DJANGO_SETTINGS_MODULE
  # should be set to {{SERVICE_VARIANT}}.{{EDXAPP_SETTINGS}}
  # where SERVICE_VARIANT is lms or cms
  EDX_PLATFORM_SETTINGS: "{{ EDXAPP_SETTINGS }}"
  # Current set to the app dir for json config, this should
  # be updated to /edx/etc/edxapp when the switch to
  # yaml based configs is complete
  CONFIG_ROOT: "{{ edxapp_app_dir }}"
  LMS_CFG: "{{ edxapp_lms_cfg }}"
  STUDIO_CFG: "{{ edxapp_studio_cfg }}"
  BOTO_CONFIG: "{{ edxapp_app_dir }}/.boto"

edxapp_environment_extra: {}

edxapp_environment: "{{ edxapp_environment_default | combine(edxapp_environment_extra) }}"

edxapp_generic_contentstore_config: &edxapp_generic_default_contentstore
  ENGINE:  'xmodule.contentstore.mongo.MongoContentStore'
  #
  # connection strings are duplicated temporarily for
  # backward compatibility
  #
  OPTIONS:
    db: "{{ EDXAPP_MONGO_DB_NAME }}"
    host: "{{ EDXAPP_MONGO_HOSTS }}"
    password: "{{ EDXAPP_MONGO_PASSWORD }}"
    port: "{{ EDXAPP_MONGO_PORT }}"
    user: "{{ EDXAPP_MONGO_USER }}"
    ssl: "{{ EDXAPP_MONGO_USE_SSL }}"

edxapp_generic_doc_store_config: &edxapp_generic_default_docstore
  db: "{{ EDXAPP_MONGO_DB_NAME }}"
  host: "{{ EDXAPP_MONGO_HOSTS }}"
  replicaSet: "{{ EDXAPP_MONGO_REPLICA_SET }}"
  password: "{{ EDXAPP_MONGO_PASSWORD }}"
  port: "{{ EDXAPP_MONGO_PORT }}"
  user: "{{ EDXAPP_MONGO_USER }}"
  collection:  'modulestore'
  ssl: "{{ EDXAPP_MONGO_USE_SSL }}"
  # https://api.mongodb.com/python/2.9.1/api/pymongo/mongo_client.html#module-pymongo.mongo_client
  socketTimeoutMS: 3000 # default is never timeout while the connection is open, this means it needs to explicitly close raising pymongo.errors.NetworkTimeout
  connectTimeoutMS: 2000 # default is 20000, I believe raises pymongo.errors.ConnectionFailure
  # Not setting waitQueueTimeoutMS and waitQueueMultiple since pymongo defaults to nobody being allowed to wait

edxapp_databases:
# edxapp's edxapp-migrate scripts and the edxapp_migrate play
# will ensure that any DB not named read_replica will be migrated
# for both the lms and cms.
  read_replica:
    ENGINE: 'django.db.backends.mysql'
    NAME: "{{ EDXAPP_MYSQL_REPLICA_DB_NAME }}"
    USER: "{{ EDXAPP_MYSQL_REPLICA_USER }}"
    PASSWORD: "{{ EDXAPP_MYSQL_REPLICA_PASSWORD }}"
    HOST: "{{ EDXAPP_MYSQL_REPLICA_HOST }}"
    PORT: "{{ EDXAPP_MYSQL_REPLICA_PORT }}"
    CONN_MAX_AGE: "{{ EDXAPP_MYSQL_CONN_MAX_AGE }}"
    OPTIONS: "{{ EDXAPP_MYSQL_REPLICA_OPTIONS }}"
  default:
    ENGINE: 'django.db.backends.mysql'
    NAME: "{{ EDXAPP_MYSQL_DB_NAME }}"
    USER: "{{ EDXAPP_MYSQL_USER }}"
    PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD }}"
    HOST: "{{ EDXAPP_MYSQL_HOST }}"
    PORT: "{{ EDXAPP_MYSQL_PORT }}"
    ATOMIC_REQUESTS: "{{ EDXAPP_MYSQL_ATOMIC_REQUESTS }}"
    CONN_MAX_AGE: "{{ EDXAPP_MYSQL_CONN_MAX_AGE }}"
    OPTIONS: "{{ EDXAPP_MYSQL_OPTIONS }}"
  student_module_history:
    ENGINE: 'django.db.backends.mysql'
    NAME: "{{ EDXAPP_MYSQL_CSMH_DB_NAME }}"
    USER: "{{ EDXAPP_MYSQL_CSMH_USER }}"
    PASSWORD: "{{ EDXAPP_MYSQL_CSMH_PASSWORD }}"
    HOST: "{{ EDXAPP_MYSQL_CSMH_HOST }}"
    PORT: "{{ EDXAPP_MYSQL_CSMH_PORT }}"
    CONN_MAX_AGE: "{{ EDXAPP_MYSQL_CONN_MAX_AGE }}"
    OPTIONS: "{{ EDXAPP_MYSQL_CSMH_OPTIONS }}"

# install dir for the edx-platform repo
edxapp_code_dir: "{{ edxapp_app_dir }}/edx-platform"


# gunicorn ports/hosts, these shouldn't need to be overridden
edxapp_cms_gunicorn_port: 8010
edxapp_cms_gunicorn_host: 127.0.0.1
edxapp_lms_gunicorn_port: 8000
edxapp_lms_gunicorn_host: 127.0.0.1

# These vars are for creating the application json config
# files.  There are two for each service that uses the
# 'edx-platform' code.  Defining them will create the upstart
# job.  It will also enable the corresponding section in the
# 'edxapp' upstart job.

service_variants_enabled:
  - lms
  - cms

#Number of gunicorn worker processes to spawn, as a multiplier to number of virtual cores
worker_core_mult:
  lms: 4
  cms: 2

# Stanford-style Theming
# Set theme name with edxapp_theme_name
# Stanford, for example, uses edxapp_theme_name: 'stanford'
#
# TODO: change variables to ALL-CAPS, since they are meant to be externally overridden
edxapp_theme_name: ""
edxapp_theme_source_repo: 'https://{{ COMMON_GIT_MIRROR }}/Stanford-Online/edx-theme.git'
edxapp_theme_version: 'master'

# make this the public URL instead of writable
edx_platform_repo: "https://{{ COMMON_GIT_MIRROR }}/edx/edx-platform.git"
# `edx_platform_version` can be anything that git recognizes as a commit
# reference, including a tag, a branch name, or a commit hash
edx_platform_version: 'release'
custom_requirements_file:   "{{ edxapp_code_dir }}/requirements/edx/custom.txt"
base_requirements_file:   "{{ edxapp_code_dir }}/requirements/edx/base.txt"
django_requirements_file:   "{{ edxapp_code_dir }}/requirements/edx/django.txt"
openstack_requirements_file: "{{ edxapp_code_dir }}/requirements/edx/openstack.txt"

sandbox_base_requirements:  "{{ edxapp_code_dir }}/requirements/edx-sandbox/base.txt"

# The Python requirements files in the order they should be installed.  This order should
# match the order of PYTHON_REQ_FILES in edx-platform/pavelib/prereqs.py.
edxapp_requirements_files:
  - "{{ custom_requirements_file }}"
  - "{{ base_requirements_file }}"

# All edxapp requirements files potentially containing Github URLs.  When using a custom
# Github mirror, occurrences of "github.com" are replaced by the custom mirror in these
# files.
edxapp_requirements_with_github_urls:
  - "{{ custom_requirements_file }}"
  - "{{ base_requirements_file }}"
  - "{{ sandbox_base_requirements }}"

edxapp_chrislea_ppa: "ppa:chris-lea/node.js"

edxapp_debian_pkgs_default:
  # for compiling the virtualenv
  # (only needed if wheel files aren't available)
  - s3cmd
  - pkg-config
  # for scipy, do not install
  # libopenblas-base, it will cause
  # problems for numpy
  - g++
  # apparmor
  - apparmor-utils
  # misc
  - curl
  - ipython
  - nodejs
  - ntp
  # matplotlib needs libfreetype6-dev
  - libfreetype6-dev
  # cffi needs libffi-dev
  - libffi-dev
  - python-dev
  - libsqlite3-dev

edxapp_debian_pkgs_extra: []

# Deploy Specific Vars
edxapp_lms_variant: lms
edxapp_cms_variant: cms

# Worker Settings
worker_django_settings_module: '{{ EDXAPP_SETTINGS }}'
EDXAPP_CELERY_HEARTBEAT_ENABLED: true

# Add default service worker users
SERVICE_WORKER_USERS:
  - email: "{{ EDXAPP_ENTERPRISE_SERVICE_WORKER_EMAIL }}"
    username: "{{ EDXAPP_ENTERPRISE_SERVICE_WORKER_USERNAME }}"
    is_staff: true
    is_superuser: false
  - email: "{{ EDXAPP_VEDA_SERVICE_USER_EMAIL }}"
    username: "{{ EDXAPP_VEDA_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false
  - email: "{{ JOURNALS_SERVICE_USER_EMAIL }}"
    username: "{{ JOURNALS_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false
    enabled: "{{ JOURNALS_ENABLED|default(false) }}"
  - email: "{{ DISCOVERY_SERVICE_USER_EMAIL }}"
    username: "{{ DISCOVERY_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false
  - email: "{{ INSIGHTS_SERVICE_USER_EMAIL }}"
    username: "{{ INSIGHTS_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false
  - email: "{{ CREDENTIALS_SERVICE_USER_EMAIL }}"
    username: "{{ CREDENTIALS_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false
  - email: "{{ DESIGNER_SERVICE_USER_EMAIL }}"
    username: "{{ DESIGNER_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false
  - email: "{{ REGISTRAR_SERVICE_USER_EMAIL }}"
    username: "{{ REGISTRAR_SERVICE_USER_NAME }}"
    is_staff: true
    is_superuser: false

EDXAPP_ENABLE_DJANGO_ADMIN_RESTRICTION: false
